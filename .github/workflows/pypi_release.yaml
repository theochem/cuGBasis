# This workflow is adapted from:
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: PyPI Release
on:
  push:
    tags:
      # Trigger on version tags (e.g., v1.0.0)
      - "v[0-9].[0-9].[0-9]*"
      - "[0-9].[0-9].[0-9]*"
      # Trigger on pre-release tags (e.g., v1.0.0-alpha.1)
      - "v[0-9].[0-9].[0-9]*-*"
      - "[0-9].[0-9].[0-9]*-*"

env:
  # The name of the package to be published to PyPI and TestPyPI.
  PYPI_NAME: qc-cuGBasis

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
      # Fetch CUDA toolkit using Jimver/cuda-toolkit
      - name: Fetch CUDA toolkit
        uses: Jimver/cuda-toolkit@master
        id: cuda-toolkit
        with:
          cuda: '12.8.1'
          use-local-cache: false

      - name: Check nvcc version
        run: nvcc -V

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install development and distributions version
        run: |
          pip install --upgrade pip
          git submodule update --init --recursive
          pip install -v .
          python -m pip install build

      - name: Build Source Distribution
        run: >-
          python -m build --sdist

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    # only publish to PyPI on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: PyPI-Release
      url: https://pypi.org/project/${{ env.PYPI_NAME }}
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  github-release:
    name: Sign the Python distribution with Sigstore and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    # if: ${{ github.ref == 'refs/heads/master' && github.repository_owner == 'theochem' }}
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: TestPyPI
      url: https://test.pypi.org/project/${{ env.PYPI_NAME }}

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
